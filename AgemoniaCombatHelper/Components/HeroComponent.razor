@if (Hero is not null) {
    <div class="hero" @onclick="() => heroModal?.Open()">
        <div class="banner">
            <ActionColorDisplay IsEnemy="false" Entity="@Hero" />
            @Hero.HeroClass.ToString()
        </div>
        @if (HasExtraManeuver)
        {
            <div>
                <img src="images/extra-maneuver.png" />
            </div>
        }
        <div class="stat-wrapper">
            <img src="images/stamina.png" />
            <span>@Hero.Stamina</span>
        </div>
        <div class="stat-wrapper">
            <img src="images/spent_stamina.png" />
            <span>@Hero.SpentStamina</span>
        </div>
        <div class="stat-wrapper">
            <img src="images/health.png" />
            <span>@Hero.Damage</span>
        </div>
    </div>
    <Modal @ref="@heroModal">
        <Title>Editing @Hero.HeroClass.ToString()</Title>
        <Body>
            <div>
                <button class="btn btn-secondary" @onclick="() => Hero.SpendStamina(1)">-1</button>
                Stamina: @Hero.Stamina
                <button class="btn btn-secondary" @onclick="() => Hero.RecoverStamina(1)">+1</button>
            </div>
            <div>
                Spent Stamina: @Hero.SpentStamina
            </div>
            <div>
                <button class="btn btn-secondary" @onclick="() => Hero.TakeDamage(1)">-1</button>
                Damage: @Hero.Damage
                <button class="btn btn-secondary" @onclick="() => Hero.HealDamage(1)">+1</button>
            </div>
        </Body>
    </Modal>
}
@code {
    [Parameter]
    public Hero? Hero { get; set; }
    [Parameter]
    public bool HasExtraManeuver { get; set; }

    private Modal? heroModal;
}
