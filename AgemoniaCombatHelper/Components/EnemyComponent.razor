@if (Enemy is not null) {
    <div class="enemy">
        <div class="enemy-info">
            <div class="header">
                <div>
                    <ActionColorDisplay />
                </div>
                <div class="stack">
                    <div class="enemy-name">@Enemy.Name</div>
                    @if (Enemy.Tags is not null)
                    {
                        <hr />
                        <div class="tags">
                            @foreach (string Tag in Enemy.Tags)
                            {
                                @Tag
                            }
                        </div>
                    }
                </div>
            </div>
            <div>
                <img src="@iconUrl" />
            </div>
        </div>
        @if (Enemy.SelectedAttackSymbol != AttackSymbol.None)
        {
            <AttackComponent />
        }
        <button class="btn btn-primary" @onclick="AddEnemy">+</button>
        @foreach (var enemyInstance in enemyInstances)
        {
            <EnemyInstanceComponent Instance="@enemyInstance" />
        }
    </div>
}
@code {
    // TODO: Add drops on bottom of enemy-info
    // TODO: Add armor/retaliation under nameplate
    // TODO: Fix enemy instance component layout, should be below attacks
    [Inject]
    public CombatController? controller { get; set; }
    [CascadingParameter]
    public Enemy? Enemy { get; set; }

    private string iconUrl = "";

    protected override void OnParametersSet()
    {
        iconUrl = "images/monsters/s" + controller?.ScenarioNumber + "_" + Enemy?.Name?.Replace("%20", "_") + ".png";
        base.OnParametersSet();
    }

    private List<EnemyInstance> enemyInstances = new();

    private void AddEnemy()
    {
        enemyInstances.Add(new EnemyInstance(controller!.GetPlayerCount(), Enemy!));
    }
}
